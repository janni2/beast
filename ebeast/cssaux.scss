// This Source Code Form is licensed MPL-2.0: http://mozilla.org/MPL/2.0

/** HSV (HSB) to RGBA */
@function hsv($hue, $satb, $value, $a: 1) {
  @if $satb == 0 {
    @return hsla($hue, 0, $value, $a)
  } @else if $value == 0 {
    @return hsla($hue, 0, 0, $a)
  } @else {
    $lumi: $value * (1 - ($satb / 100) / 2);
    $satl: $satb * $value / if($lumi < 50, $lumi * 2, 200 - $lumi * 2);
    @return hsla($hue, $satl, $lumi, $a);
  }
}

/** Value of window.devicePixelRatio, assigned via JS to the CSS var `--device-pixel-ratio` */
$device-pixel-ratio: var(--device-pixel-ratio);

/** Convert CSS `px` to device pixels via the CSS var `--device-pixel-ratio` */
@function dppx($n: 1) {
  @return calc(1px * #{$n} / #{$device-pixel-ratio});
}

/// Convert a percentage number to a factor within 0â€¦1
@function asfactor($f) {
  @if (unit($f) == "%") {
    $f: $f / 100%;
  }
  @return $f;
}

/// Reduce luminance by a percentage
@function darker($col, $f: 10%) {
  // decrease luminance by a percentage, also work around luminance==0 -> 0
  $lum: max(0.0000001, chromatic-color-luminance($col) * (1 - asfactor($f)));
  @return chromatic-color-luminance($col, $lum, 'lab');
}

/// Increase luminance by a percentage
@function lighter($col, $f: 10%) {
  // increase luminance by a percentage, also work around luminance==0 -> 0
  $lum: max(0.0000001, chromatic-color-luminance($col) * (1 + asfactor($f)));
  @return chromatic-color-luminance($col, $lum, 'lab');
}
